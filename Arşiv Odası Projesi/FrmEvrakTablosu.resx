<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>